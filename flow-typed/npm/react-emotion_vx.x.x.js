// flow-typed signature: dff73a8d433071e5bc76f51c757de493
// flow-typed version: <<STUB>>/react-emotion_v9.2.8/flow_v0.80.0

/**
 * This is an autogenerated libdef stub for:
 *
 *   'react-emotion'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */

/*
injectGlobal`
  body {
    margin: 5px;
    margin: ${margin}px;
    margin: ${margin};
    ${MyComp} {
      margin: 5px;
    }
  }
`
const className = css`
  margin: 5px;
  margin: ${margin}px;
  margin: ${margin};
  ${MyComp} {
    margin: 5px;
  }
`
const Container = styled.div`
  margin: 5px;
  margin: ${margin}px;
  margin: ${margin};
  margin: ${props => props.theme.margin}px;
  ${MyComp} {
    margin: 5px;
  }
`
*/
type InterpolationGlobal =
  | number
  | string
  | StyledComponent
type InterpolationCSS =
  | InterpolationGlobal
type InterpolationStyled =
  | InterpolationCSS
  | (props: { theme: ThemeDefault }) => number | string

/*
const className = cx(
  'bold',
  5,
  null,
  undefined,
  { italic: false, blue: true }
  () => 'bold',
  ['bold', [5], () => ({ blue: true })],
)
*/
type CXArgument =
  | string
  | number
  | null
  | void
  | { [string]: boolean }
  | () => CXArgument
  | CXArgument[]

/*
const createStyledLink = styled.a
const createStyledLink = styled('a')
const createStyledLink = styled(Link)
*/
type Styled = {
  (React$ElementType): CreateStyledComponent,
  [tag: string]: CreateStyledComponent,
}
type CreateStyledComponent =
  (string[], ...InterpolationStyled[]) =>
    typeof StyledComponent

/*
const StyledLink = styled.a`
  margin: 5px;
`
<StyledLink
  theme={theme}
  innerRef={this.link}
>
  Home
</StyledLink>

const StyledButton = StyledLink.withComponent('button')
const StyledNavLink = StyledLink.withComponent(NavLink)
*/
class StyledComponent extends React$Component<{
  theme?: *,
  innerRef?: React$Ref<*>,
}, *> {
  static withComponent: (React$ElementType) => typeof StyledComponent
}

/*
<ThemeProvider theme={theme}>
  ...
</ThemeProvider>
*/
type ThemeDefault = {
  [key: string]: mixed,
}

declare module 'react-emotion' {
  declare export function injectGlobal(string[], ...InterpolationGlobal[]): void
  declare export function css(string[], ...InterpolationCSS[]): string
  declare export function cx(...CXArgument[]): string
  declare export default Styled
}
