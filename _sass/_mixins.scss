@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin query($size) {
  @if $size == xs {
    @media (min-width: $screen-xs-min) { @content; }
  }
  @else if $size == sm {
    @media (min-width: $screen-sm-min) { @content; }
  }
  @else if $size == md {
    @media (min-width: $screen-md-min) { @content; }
  }
  @else if $size == lg {
    @media (min-width: $screen-lg-min) { @content; }
  }
  @else {
    @media (min-width: $size) { @content; }
  }
}

@mixin center($max-width: false) {
  @if $max-width != false {
    max-width: $max-width;
  }
  margin-left: auto;
  margin-right: auto;
}

@mixin container($max-width: 800px) {
  @include center($max-width);
  padding-left: 1rem;
  padding-right: 1rem;
}

@mixin hidpi($ratio: 1.3) {
  @media only screen and (-webkit-min-device-pixel-ratio: $ratio),
  only screen and (min--moz-device-pixel-ratio: $ratio),
  only screen and (-o-min-device-pixel-ratio: #{$ratio}/1),
  only screen and (min-resolution: #{round($ratio*96)}dpi),
  only screen and (min-resolution: #{$ratio}dppx) {
    @content;
  }
}

@mixin list-unstyled {
  margin: 0;
  padding: 0;
  list-style-type: none;
}

@mixin font-smoothing {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@mixin bleed($options: (
  add-padding: false,
  reset: false
)) {
  margin-left: -1rem;
  margin-right: -1rem;

  @if (map-get($options, add-padding) == true) {
    padding-left: 1rem;
    padding-right: 1rem;
  }

  @if (map-get($options, reset) == true) {
    @media (min-width: 800px) {
      margin-left: 0;
      margin-right: 0;
      padding-left: 0;
      padding-right: 0;
    }
  }
}
